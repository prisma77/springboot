<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.springboot.mapper.BoardMapper">
    <!-- BoardMapper.xml : Board 테이블 관련 SQL 모음 -->

    <!-- Board 테이블 컬럼과 Board 객체 매핑 -->
    <resultMap id="BoardMap" type="com.multi.springboot.model.Board">
        <id     property="id"        column="id"/>                 <!-- 기본키(id) -->
        <result property="title"     column="title"/>              <!-- 제목 -->
        <result property="writer"    column="writer"/>             <!-- 작성자 -->
        <result property="content"   column="content"/>            <!-- 내용 -->
        <result property="views"     column="views"/>              <!-- 조회수 -->
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP" javaType="java.util.Date"/> <!-- 작성일 -->
    </resultMap>

    <!-- 전체 글 목록 조회 -->
    <select id="getAllBoards" resultMap="BoardMap">
        SELECT id, title, writer, content, views, created_at
        FROM board
        ORDER BY id DESC
    </select>

    <!-- id로 특정 글 조회 -->
    <select id="getBoardById" parameterType="int" resultType="com.multi.springboot.model.Board">
        SELECT id, title, writer, content, views, created_at
        FROM board
        WHERE id = #{id}
    </select>

    <!-- 새 글 등록 -->
    <insert id="insertBoard" parameterType="com.multi.springboot.model.Board">
        INSERT INTO board (title, writer, content)
        VALUES (#{title}, #{writer}, #{content})
    </insert>

    <!-- 글 수정 -->
    <update id="updateBoard" parameterType="com.multi.springboot.model.Board">
        UPDATE board
        SET title = #{title},
            content = #{content}
        WHERE id = #{id}
    </update>

    <!-- 글 삭제 -->
    <delete id="deleteBoard" parameterType="int">
        DELETE FROM board
        WHERE id = #{id}
    </delete>

    <!-- 조회수 1 증가 -->
    <update id="incrementViews" parameterType="int">
        UPDATE board
        SET views = views + 1
        WHERE id = #{id}
    </update>

    <!-- 전체 글 개수 (검색 조건 포함) -->
    <select id="count" resultType="int">
        SELECT COUNT(*)
        FROM board
        <where>
            <!-- 검색어가 있을 때만 조건 추가 -->
            <if test="q != null and q != ''">
                <choose>
                    <when test="type == 'title'">   <!-- 제목 검색 -->
                        AND title LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <when test="type == 'content'"> <!-- 내용 검색 -->
                        AND content LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <when test="type == 'writer'">  <!-- 작성자 검색 -->
                        AND writer LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <otherwise>                      <!-- 제목+내용 같이 검색 -->
                        AND (title LIKE CONCAT('%', #{q}, '%')
                        OR  content LIKE CONCAT('%', #{q}, '%'))
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <!-- 글 목록 조회 (검색 + 페이징) -->
    <select id="find" resultType="com.multi.springboot.model.Board">
        SELECT id, title, writer, content, views, created_at
        FROM board
        <where>
            <!-- 검색어가 있을 때만 조건 추가 -->
            <if test="q != null and q != ''">
                <choose>
                    <when test="type == 'title'">   <!-- 제목 검색 -->
                        AND title   LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <when test="type == 'content'"> <!-- 내용 검색 -->
                        AND content LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <when test="type == 'writer'">  <!-- 작성자 검색 -->
                        AND writer  LIKE CONCAT('%', #{q}, '%')
                    </when>
                    <otherwise>                      <!-- 제목+내용 같이 검색 -->
                        AND (title LIKE CONCAT('%', #{q}, '%')
                        OR  content LIKE CONCAT('%', #{q}, '%'))
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY id DESC
        <!-- LIMIT : 몇 번째부터(offset), 몇 개(limit) 가져올지 -->
        LIMIT #{offset}, #{limit}
    </select>

</mapper>


